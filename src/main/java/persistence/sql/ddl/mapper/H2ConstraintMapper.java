package persistence.sql.ddl.mapper;

import persistence.sql.ddl.domain.Constraint;

import java.util.stream.Collectors;
import java.util.stream.Stream;

public class H2ConstraintMapper implements ConstraintMapper {

    private static final String EMPTY_STRING = "";
    private static final String SPACE = " ";

    private static final String PRIMARY_KEY_CONSTRAINT_QUERY = "PRIMARY KEY";
    private static final String AUTO_INCREMENT_CONSTRAINT_QUERY = "AUTO_INCREMENT";
    private static final String NOT_NULL_CONSTRAINT_QUERY = "NOT NULL";

    @Override
    public String getConstraintString(Constraint constraint) {
        return Stream.of(isPrimaryKey(constraint),
                        isAutoGenerated(constraint),
                        isNotNull(constraint))
                .filter(s -> !s.isEmpty())
                .collect(Collectors.joining(SPACE));
    }

    private String isPrimaryKey(Constraint constraint) {
        if (constraint.isPrimaryKey()) {
            return PRIMARY_KEY_CONSTRAINT_QUERY;
        }
        return EMPTY_STRING;
    }

    private String isAutoGenerated(Constraint constraint) {
        if (constraint.isAutoGenerated()) {
            return AUTO_INCREMENT_CONSTRAINT_QUERY;
        }
        return EMPTY_STRING;
    }

    private String isNotNull(Constraint constraint) {
        if (constraint.isNotNull()) {
            return NOT_NULL_CONSTRAINT_QUERY;
        }
        return EMPTY_STRING;
    }
}
